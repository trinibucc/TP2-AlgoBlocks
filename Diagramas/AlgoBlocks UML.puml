@startuml

class AlgoBlocks{
    + AlgoBlocks(List<Bloque>, Personaje)
    + ejecutar()
    + obtenerPersonaje(): Personaje
    + agregarLapizArriba()
    + agregarLapizAbajo()
    + agregarBloqueDerecha()
    + agregarBloqueAbajo()
    + agregarBloqueIzquierda()
    + agregarBloqueArriba()
    # agregarBloqueRepetirDosVeces(): BloqueRepetir
    + agregarBloqueRepetirTresVeces(): BloqueRepetir
    + agregarBloqueInverso(): BloqueInverso
}
AlgoBlocks *--- Personaje
AlgoBlocks *--- "*" Bloque

interface Bloque{
    ejecutar(Personaje)
}
Bloque ...> Personaje

class Personaje{
    - Lapiz
    - int[2]
    - sumarPosiciones(int[2])
    + subirLapiz()
    + obtenerLapiz(): Lapiz
    + bajarLapiz()
    + obtenerPosicion(): int[2]
    + dibujar()
}
Personaje *---> Lapiz

class Recorrido{
     + Recorrido(Personaje)
     + ejecutar()
     + obtenerRecorrido(): List<Bloque>

}
Recorrido *---> "*" Bloque
Recorrido o--- Personaje
@enduml